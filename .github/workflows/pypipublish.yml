name: Publish Python Package

on:
  push:
    tags:
      - "*" # Will trigger for every tag, alternative: 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
      - name: Install dependencies
        run: |
          poetry --version
          poetry install
      - name: Build and publish
        env:
          PYPI_USERNAME: __token__
          PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish --build -u $PYPI_USERNAME -p $PYPI_PASSWORD
  docs:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
      - run: |
          poetry install --with=dev
      - run: |
          # From https://github.com/mhausenblas/mkdocs-deploy-gh-pages/blob/e55ecab6718b449a90ebd4313f1320f9327f1386/action.sh#L35C1-L59C1
          if [ -n "${GITHUB_TOKEN}" ]; then
              echo "setup with GITHUB_TOKEN"
              remote_repo="https://x-access-token:${GITHUB_TOKEN}@github.com/eykd/convoke.git"
          elif [ -n "${PERSONAL_TOKEN}" ]; then
              echo "setup with PERSONAL_TOKEN"
              remote_repo="https://x-access-token:${PERSONAL_TOKEN}@github.com/eykd/convoke.git"
          else
              echo "no token found; linting"
          fi

          # workaround, see https://github.com/actions/checkout/issues/766
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          if ! git config --get user.name; then
              git config --global user.name "${GITHUB_ACTOR}"
          fi

          if ! git config --get user.email; then
              git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          fi

          git remote rm origin
          git remote add origin "${remote_repo}"
          git fetch origin
          poetry run mike deploy --push --update-aliases $(poetry version --short|cut -d. -f-2) latest
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
